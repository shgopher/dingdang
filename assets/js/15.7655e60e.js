(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{443:function(t,a,s){"use strict";s.r(a);var n=s(36),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-使用前的基本配置"}},[t._v("git 使用前的基本配置")]),t._v(" "),s("h2",{attrs:{id:"安装-git"}},[t._v("安装 git")]),t._v(" "),s("p",[t._v("对于 Linux 操作系统，一般都会内置 git，如果你想了解更多关于 Linux 系统下的安装内容，可以参考"),s("a",{attrs:{href:"https://git-scm.com/download/linux",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("对于 macOS，只需要安装 xcode command line tools 即可。可以在命令行中输入 "),s("code",[t._v("git --version")]),t._v(" 系统会自动提示安装，或者去"),s("a",{attrs:{href:"https://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("进行手动安装")]),t._v(" "),s("p",[t._v("对于 windows 操作系统，点击"),s("a",{attrs:{href:"https://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("即可安装 git for windows 项目，当然也可以选择安装 "),s("a",{attrs:{href:"https://desktop.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub desktop"),s("OutboundLink")],1),t._v(" 项目")]),t._v(" "),s("h2",{attrs:{id:"使用前的基本配置"}},[t._v("使用前的基本配置")]),t._v(" "),s("p",[t._v("git 的配置信息存储在三个位置，分别是")]),t._v(" "),s("ul",[s("li",[t._v("/etc/gitconfig：系统级的配置文件，如果使用 git config --system 就会写入到这个目录下")]),t._v(" "),s("li",[t._v("～/.gitconfig：当前用户下的配置文件，git config --global 命令就会写入到这个目录下")]),t._v(" "),s("li",[t._v("当前 git 仓库中的。git/config：只针对于当前仓库有效，git config --local 这样即可。")])]),t._v(" "),s("p",[t._v("每一个级别都会覆盖上一级别的配置，也就是说。git/config 的优先级最高。")]),t._v(" "),s("p",[t._v("可以使用 "),s("code",[t._v("git config --list --show-origin")]),t._v(" 命令查看所有的配置文件，以及所在的目录。")]),t._v(" "),s("p",[t._v("配置目录形如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please adapt and uncomment the following lines:")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xx\n\temail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xx@gmail.com\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  excludesfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /Users/xxx/.gitignore_global\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssh://git@github.com/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  insteadOf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://github.com\n")])])]),s("h3",{attrs:{id:"设置用户信息"}},[t._v("设置用户信息")]),t._v(" "),s("p",[t._v("通常来说，设置用户信息都是放在 "),s("code",[t._v("～/.gitconfig")]),t._v(" 这个目录下，所以我们使用的命令就是 "),s("code",[t._v("git config --global user.name jackie")]),t._v(" "),s("code",[t._v("git config --global user.email jackie@example.com")]),t._v("，当然了，去直接更改 ~/.gitconfig 也可以。")]),t._v(" "),s("p",[t._v("如果每一个项目的用户和邮箱不同，那么需要去更改项目下的。git/config 目录，或者在该项目的路径下使用 "),s("code",[t._v("git config")]),t._v(" 的时候不添加 "),s("code",[t._v("--global")]),t._v(" 就可以了。")]),t._v(" "),s("p",[t._v("我们只要使用 git 就必须设置 user.name 和 user.email 否则 git 就无法运行。")]),t._v(" "),s("h3",{attrs:{id:"检查配置信息"}},[t._v("检查配置信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n")])])]),s("p",[t._v("如果看到重复的配置，那么 git 会采用最后一个数值。")]),t._v(" "),s("h2",{attrs:{id:"获取-git-的帮助文件"}},[t._v("获取 git 的帮助文件")]),t._v(" "),s("p",[t._v("获取详细的 git 帮助文件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" 命令\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" 命令 --help\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-命令\n")])])]),s("p",[t._v("让我们看一个实际的例子")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --help\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("man")]),t._v(" git-add\n")])])]),s("p",[t._v("获取更加简洁的帮助文件可以使用 "),s("code",[t._v("git 命令 -h")]),t._v(" 这种形式去查找更加简单的命令。")])])}),[],!1,null,null,null);a.default=e.exports}}]);